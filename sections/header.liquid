{%- style -%}
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    transition: transform 0.3s ease;
  }

  .header--hidden {
    transform: translateY(-100%);
  }

  .header__wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 2rem;
    max-width: 1400px;
    margin: 0 auto;
  }

  .header__logo {
    font-size: 2rem;
    font-weight: 700;
    text-decoration: none;
    color: #000;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .header__logo-urdu {
    font-family: 'Noto Nastaliq Urdu', serif;
  }

  .header__nav {
    display: flex;
    gap: 2rem;
  }

  .header__nav-link {
    text-decoration: none;
    color: #000;
    font-weight: 500;
    transition: opacity 0.2s ease;
  }

  .header__nav-link:hover {
    opacity: 0.7;
  }

  .header__icons {
    display: flex;
    gap: 1.5rem;
  }

  .header__icon {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    color: #000;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .cart-count {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 20px;
    height: 20px;
    padding: 0 6px;
    background: #000;
    color: #fff;
    border-radius: 10px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  /* Mobile Menu Styles */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100vh;
    background: #fff;
    z-index: 1000;
    transition: left 0.3s ease;
    padding: 2rem;
  }

  .mobile-menu--open {
    left: 0;
  }

  .mobile-menu__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .mobile-menu__close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .mobile-menu__nav {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .mobile-menu__link {
    text-decoration: none;
    color: #000;
    font-size: 1.25rem;
    font-weight: 500;
  }

  .menu-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .menu-toggle span {
    display: block;
    width: 25px;
    height: 2px;
    background: #000;
    margin: 5px 0;
    transition: transform 0.3s ease;
  }

  .menu-toggle--active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .menu-toggle--active span:nth-child(2) {
    opacity: 0;
  }

  .menu-toggle--active span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -7px);
  }

  @media (min-width: 769px) {
    .menu-toggle {
      display: none;
    }
  }

  @media (max-width: 768px) {
    .header__nav {
      display: none;
    }
  }
{%- endstyle -%}

<header class="header" data-header>
  <div class="header__wrapper">
    <button class="menu-toggle" data-menu-toggle aria-label="Menu">
      <span></span>
      <span></span>
      <span></span>
    </button>

    <a href="/" class="header__logo">
      <span class="header__logo-urdu">فیصلہ</span>
      <span>Faesle</span>
    </a>

    <nav class="header__nav">
      <a href="/collections/all" class="header__nav-link">Shop</a>
      <a href="/pages/about" class="header__nav-link">About</a>
      <a href="/pages/contact" class="header__nav-link">Contact</a>
    </nav>

    <div class="header__icons">
      <a href="/cart" class="header__icon" data-cart-toggle>
        Cart
        <span class="cart-count" data-cart-count>{{ cart.item_count }}</span>
      </a>
    </div>
  </div>
</header>

<div class="mobile-menu" data-mobile-menu>
  <div class="mobile-menu__header">
    <a href="/" class="header__logo">
      <span class="header__logo-urdu">فیصلہ</span>
      <span>Faesle</span>
    </a>
    <button class="mobile-menu__close" data-menu-close aria-label="Close menu">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>
  <nav class="mobile-menu__nav">
    <a href="/collections/all" class="mobile-menu__link">Shop</a>
    <a href="/pages/about" class="mobile-menu__link">About</a>
    <a href="/pages/contact" class="mobile-menu__link">Contact</a>
  </nav>
</div>

<script>
  class Header {
    constructor() {
      this.header = document.querySelector('[data-header]');
      this.lastScroll = 0;
      this.menuToggle = document.querySelector('[data-menu-toggle]');
      this.menuClose = document.querySelector('[data-menu-close]');
      this.mobileMenu = document.querySelector('[data-mobile-menu]');
      this.cartCount = document.querySelector('[data-cart-count]');
      
      this.init();
    }

    init() {
      window.addEventListener('scroll', this.handleScroll.bind(this));
      this.menuToggle?.addEventListener('click', this.toggleMenu.bind(this));
      this.menuClose?.addEventListener('click', this.toggleMenu.bind(this));
      
      // Listen for cart updates
      document.addEventListener('cart:updated', this.handleCartUpdate.bind(this));
    }

    handleScroll() {
      const currentScroll = window.pageYOffset;
      
      if (currentScroll <= 0) {
        this.header.classList.remove('header--hidden');
        return;
      }
      
      if (currentScroll > this.lastScroll && !this.header.classList.contains('header--hidden')) {
        this.header.classList.add('header--hidden');
      } else if (currentScroll < this.lastScroll && this.header.classList.contains('header--hidden')) {
        this.header.classList.remove('header--hidden');
      }
      
      this.lastScroll = currentScroll;
    }

    toggleMenu() {
      this.mobileMenu.classList.toggle('mobile-menu--open');
      this.menuToggle.classList.toggle('menu-toggle--active');
      document.body.style.overflow = this.mobileMenu.classList.contains('mobile-menu--open') ? 'hidden' : '';
    }

    handleCartUpdate(event) {
      if (this.cartCount && event.detail?.item_count !== undefined) {
        this.cartCount.textContent = event.detail.item_count;
      }
    }
  }

  new Header();
</script>

{% schema %}
{
  "name": "Header",
  "settings": []
}
{% endschema %}